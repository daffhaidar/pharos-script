{"id":"22820e2e8c99fb21d19884056f918be8","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"contracts/MyContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// This line is required for open source licensing. Keep it as is.\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title MyContract\r\n * @dev The simplest contract for storing and retrieving a number (uint256).\r\n * Perfect for learning basic deployment.\r\n */\r\ncontract MyContract {\r\n    // This is a 'variable' or 'storage box' in the blockchain.\r\n    // We set it as 'private' so others must use our function (getValue) to view its contents.\r\n    uint256 private storedValue;\r\n\r\n    /**\r\n     * @dev Function to change the stored value.\r\n     * @param _newValue The new value to be stored.\r\n     * This is a 'write' transaction to the blockchain, so it requires gas fees.\r\n     */\r\n    function setValue(uint256 _newValue) public {\r\n        storedValue = _newValue;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to read the stored value.\r\n     * 'view' means this function only 'reads' data, doesn't change anything.\r\n     * Since it's just reading, calling this function from outside (off-chain) is FREE, no gas needed.\r\n     * @return Returns the currently stored value.\r\n     */\r\n    function getValue() public view returns (uint256) {\r\n        return storedValue;\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/MyContract.sol":{"ast":{"absolutePath":"contracts/MyContract.sol","exportedSymbols":{"MyContract":[25]},"id":26,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"MyContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"128:151:0","text":" @title MyContract\n @dev The simplest contract for storing and retrieving a number (uint256).\n Perfect for learning basic deployment."},"fullyImplemented":true,"id":25,"linearizedBaseContracts":[25],"name":"MyContract","nameLocation":"290:10:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4,"mutability":"mutable","name":"storedValue","nameLocation":"485:11:0","nodeType":"VariableDeclaration","scope":25,"src":"469:27:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":14,"nodeType":"Block","src":"752:42:0","statements":[{"expression":{"id":12,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"763:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11,"name":"_newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"777:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13,"nodeType":"ExpressionStatement","src":"763:23:0"}]},"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"505:197:0","text":" @dev Function to change the stored value.\n @param _newValue The new value to be stored.\n This is a 'write' transaction to the blockchain, so it requires gas fees."},"functionSelector":"55241077","id":15,"implemented":true,"kind":"function","modifiers":[],"name":"setValue","nameLocation":"717:8:0","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"_newValue","nameLocation":"734:9:0","nodeType":"VariableDeclaration","scope":15,"src":"726:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:19:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[],"src":"752:0:0"},"scope":25,"src":"708:86:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":23,"nodeType":"Block","src":"1153:37:0","statements":[{"expression":{"id":21,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"1171:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":20,"id":22,"nodeType":"Return","src":"1164:18:0"}]},"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"802:295:0","text":" @dev Function to read the stored value.\n 'view' means this function only 'reads' data, doesn't change anything.\n Since it's just reading, calling this function from outside (off-chain) is FREE, no gas needed.\n @return Returns the currently stored value."},"functionSelector":"20965255","id":24,"implemented":true,"kind":"function","modifiers":[],"name":"getValue","nameLocation":"1112:8:0","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[],"src":"1120:2:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":24,"src":"1144:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1143:9:0"},"scope":25,"src":"1103:87:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":26,"src":"281:912:0","usedErrors":[],"usedEvents":[]}],"src":"101:1094:0"},"id":0}},"contracts":{"contracts/MyContract.sol":{"MyContract":{"abi":[{"inputs":[],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063209652551461003b5780635524107714610059575b600080fd5b610043610075565b60405161005091906100a1565b60405180910390f35b610073600480360381019061006e91906100ed565b61007e565b005b60008054905090565b8060008190555050565b6000819050919050565b61009b81610088565b82525050565b60006020820190506100b66000830184610092565b92915050565b600080fd5b6100ca81610088565b81146100d557600080fd5b50565b6000813590506100e7816100c1565b92915050565b600060208284031215610103576101026100bc565b5b6000610111848285016100d8565b9150509291505056fea26469706673582212208e391155326f5e325cf223712739bbf9be85b07083c434265afd2ac184e0db8b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B DUP2 PUSH2 0x88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA DUP2 PUSH2 0x88 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7 DUP2 PUSH2 0xC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0xBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111 DUP5 DUP3 DUP6 ADD PUSH2 0xD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CODECOPY GT SSTORE ORIGIN PUSH16 0x5E325CF223712739BBF9BE85B07083C4 CALLVALUE 0x26 GAS REVERT 0x2A 0xC1 DUP5 0xE0 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:912:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getValue_24":{"entryPoint":117,"id":24,"parameterSlots":0,"returnSlots":1},"@setValue_15":{"entryPoint":126,"id":15,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":161,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":188,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":193,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1374:1","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:1","statements":[{"nodeType":"YulAssignment","src":"62:16:1","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:1"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:1"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:1","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:1","type":""}],"src":"7:77:1"},{"body":{"nodeType":"YulBlock","src":"155:53:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:1"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:1"},"nodeType":"YulFunctionCall","src":"177:24:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:1"},"nodeType":"YulFunctionCall","src":"165:37:1"},"nodeType":"YulExpressionStatement","src":"165:37:1"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:1","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:1","type":""}],"src":"90:118:1"},{"body":{"nodeType":"YulBlock","src":"312:124:1","statements":[{"nodeType":"YulAssignment","src":"322:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:1"},"nodeType":"YulFunctionCall","src":"330:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:1"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:1","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:1"},"nodeType":"YulFunctionCall","src":"411:17:1"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:1"},"nodeType":"YulFunctionCall","src":"358:71:1"},"nodeType":"YulExpressionStatement","src":"358:71:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:1","type":""}],"src":"214:222:1"},{"body":{"nodeType":"YulBlock","src":"482:35:1","statements":[{"nodeType":"YulAssignment","src":"492:19:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:1"},"nodeType":"YulFunctionCall","src":"502:9:1"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:1"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:1","type":""}],"src":"442:75:1"},{"body":{"nodeType":"YulBlock","src":"612:28:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:1"},"nodeType":"YulFunctionCall","src":"622:12:1"},"nodeType":"YulExpressionStatement","src":"622:12:1"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:1"},{"body":{"nodeType":"YulBlock","src":"735:28:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:1"},"nodeType":"YulFunctionCall","src":"745:12:1"},"nodeType":"YulExpressionStatement","src":"745:12:1"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:1"},{"body":{"nodeType":"YulBlock","src":"812:79:1","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:1"},"nodeType":"YulFunctionCall","src":"871:12:1"},"nodeType":"YulExpressionStatement","src":"871:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:1"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:1"},"nodeType":"YulFunctionCall","src":"842:24:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:1"},"nodeType":"YulFunctionCall","src":"832:35:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:1"},"nodeType":"YulFunctionCall","src":"825:43:1"},"nodeType":"YulIf","src":"822:63:1"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:1","type":""}],"src":"769:122:1"},{"body":{"nodeType":"YulBlock","src":"949:87:1","statements":[{"nodeType":"YulAssignment","src":"959:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:1"},"nodeType":"YulFunctionCall","src":"968:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:1"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:1"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:1"},"nodeType":"YulFunctionCall","src":"997:33:1"},"nodeType":"YulExpressionStatement","src":"997:33:1"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:1","type":""}],"src":"897:139:1"},{"body":{"nodeType":"YulBlock","src":"1108:263:1","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:1"},"nodeType":"YulFunctionCall","src":"1156:79:1"},"nodeType":"YulExpressionStatement","src":"1156:79:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:1"},"nodeType":"YulFunctionCall","src":"1125:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:1"},"nodeType":"YulFunctionCall","src":"1121:32:1"},"nodeType":"YulIf","src":"1118:119:1"},{"nodeType":"YulBlock","src":"1247:117:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:1","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:1","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:1"},"nodeType":"YulFunctionCall","src":"1322:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:1"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:1"},"nodeType":"YulFunctionCall","src":"1301:53:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:1"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:1","type":""}],"src":"1042:329:1"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063209652551461003b5780635524107714610059575b600080fd5b610043610075565b60405161005091906100a1565b60405180910390f35b610073600480360381019061006e91906100ed565b61007e565b005b60008054905090565b8060008190555050565b6000819050919050565b61009b81610088565b82525050565b60006020820190506100b66000830184610092565b92915050565b600080fd5b6100ca81610088565b81146100d557600080fd5b50565b6000813590506100e7816100c1565b92915050565b600060208284031215610103576101026100bc565b5b6000610111848285016100d8565b9150509291505056fea26469706673582212208e391155326f5e325cf223712739bbf9be85b07083c434265afd2ac184e0db8b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B DUP2 PUSH2 0x88 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA DUP2 PUSH2 0x88 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE7 DUP2 PUSH2 0xC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103 JUMPI PUSH2 0x102 PUSH2 0xBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111 DUP5 DUP3 DUP6 ADD PUSH2 0xD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CODECOPY GT SSTORE ORIGIN PUSH16 0x5E325CF223712739BBF9BE85B07083C4 CALLVALUE 0x26 GAS REVERT 0x2A 0xC1 DUP5 0xE0 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:912:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;708:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1103:87;1144:7;1171:11;;1164:18;;1103:87;:::o;708:86::-;777:9;763:11;:23;;;;708:86;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o"},"methodIdentifiers":{"getValue()":"20965255","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The simplest contract for storing and retrieving a number (uint256). Perfect for learning basic deployment.\",\"kind\":\"dev\",\"methods\":{\"getValue()\":{\"details\":\"Function to read the stored value. 'view' means this function only 'reads' data, doesn't change anything. Since it's just reading, calling this function from outside (off-chain) is FREE, no gas needed.\",\"returns\":{\"_0\":\"Returns the currently stored value.\"}},\"setValue(uint256)\":{\"details\":\"Function to change the stored value.\",\"params\":{\"_newValue\":\"The new value to be stored. This is a 'write' transaction to the blockchain, so it requires gas fees.\"}}},\"title\":\"MyContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0x466218d395ff18042523643b42f57ef8e30055e15f797cef059308a2d415eeca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e8a4b14f4be5f34e38656d1d861866fd1cce9f5df7fddb6dc565dda54a57258\",\"dweb:/ipfs/QmdVTnmAa8NdqwaVJvx3LCqDdUyK8cggKHCxJemAMGi928\"]}},\"version\":1}"}}}}}